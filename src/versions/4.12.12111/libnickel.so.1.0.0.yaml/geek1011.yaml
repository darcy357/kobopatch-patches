# The following patch(es) are by geek1011
Rename new home screen footer:
  - Enabled: no
  - FindReplaceString: {Find: "Find your next great read", Replace: "25 character string      "}
  - FindReplaceString: {Find: "Buy, borrow, or preview books", Replace: "29 character string          "}
    # You can enable the following replacement, but note that it might cause the o letter on the keyboard to change
#  - FindReplaceString: {Find: "Shop Kobo", Replace: "9char-str"}

Set slide to unlock:
  - Enabled: no
  - Description: |
      Swipe to unlock is enabled by default for the Kobo Forma. This patch allows
      you to enable/disable swipe to unlock for any device.
  # In the subroutine where the AbstractPowerView (used for swipe to unlock) is instantiated:
  # pre-4.11.12111: change Device::isFrost() to a MOV instruction to set true/false
  # 4.11.12111+: change PowerSettings::getUnlockEnabled() (to override the hidden config setting [PowerSettings] -> UnlockEnabled)
  - ReplaceBytes: {Offset: 0x9CF344, FindBLX: 0x428304, ReplaceH: 4F F0 01 00}
  - ReplaceBytes: {Offset: 0x9CF346, FindH: 01, ReplaceH: 00} # 00 to disable, 01 to enable

Enable rotation on all devices:
  - Enabled: no
  - Description: |
      Enables rotation on all devices. This shows a rotation icon in the status
      bar, which shows a menu allowing you to choose between portrait and landscape
      when pressed. This icon is only shown on rotateable views (like the reader).
  # In MainWindowController::allowLandscapeRotation, which is called when building the status bar:
  # change Device::isFrost() to MOV r0, 0x1 to set true all the time
  # NOTE: when updating this patch, make sure this doesn't try and enable the MMA8652 sensor
  #       as of 4.11.11980, there is an additional check where the sensor is enabled, and this
  #       will fail gracefully, removing the auto-rotate option from the status bar menu.
  - ReplaceBytes: {Offset: 0x964370, FindBLX: 0x411398, ReplaceH: 4F F0 01 00}

Both page turn buttons go next:
  - Enabled: no
  - Description: |
      Make both page turn buttons on the Forma go next in the reader.
  # In ReadingView::keyPressEvent(QKeyEvent*):
  # nop the possible branch to prev page, falling through to the next page no matter what.
  - ReplaceBytesNOP: {Offset: 0x9D8C5E, FindH: 2E B1}

Both page turn sides go next:
  - Enabled: no
  - Description: |
      Make both page turn sides go next in the reader.
  # In ReadingView::processTap(TapGesture*):
  # nop the branch for checking if left-to-right (so it always runs the swap of back/forward)
  - ReplaceBytesNOP: {Offset: 0x9DFF08, FindH: 18 B9}
  # where r3 = *(r7+0xc) (back) and r2 = *(r7+0x10) (forward), then they are stored in reverse,
  # instead of storing each one, just store forward (by changing the source register in the str
  # instruction)
  - ReplaceBytes: {Offset: 0x9DFF0E, FindH: 3B 61, ReplaceH: 3A 61}
  # This patch could have also been done later on where the tap point is checked against different
  # QRects, but that's a lot more complicated due to the use of QHash s of pointers to functions.

Rename settings:
  - Enabled: no
  - Description: Allows you to rename the settings in the settings menu.
  - FindReplaceString: {Find: "Accounts", Replace: "Accounts"}
  - FindReplaceString: {Find: "OverDrive\0", Replace: "OverDrive\0"}
  - FindReplaceString: {Find: "Date and time", Replace: "Date and time"}
  - FindReplaceString: {Find: "Language and dictionaries", Replace: "Language and dictionaries"}
  - FindReplaceString: {Find: "Wi Fi connection", Replace: "Wi Fi connection"}
  - FindReplaceString: {Find: "Syncing and updates", Replace: "Syncing and updates"}
  - FindReplaceString: {Find: "Energy saving and privacy", Replace: "Energy saving and privacy"}
  - FindReplaceString: {Find: "Reading settings", Replace: "Reading settings"}
  - FindReplaceString: {Find: "Manage downloads", Replace: "Manage downloads"}
  - FindReplaceString: {Find: "Beta Features", Replace: "Beta Features"}
  - FindReplaceString: {Find: "About %1", Replace: "About %1", MustMatchLength: yes} # must keep the %1

Replace adobe page numbers toggle with invert screen:
  - Enabled: no
  - Description: |
      Replaces the adobe page numbers toggle in reading settings with an invert
      screen one.
  # in a subroutine of N3SettingsReadingView::setupUi(Widget) (found backwards from FeatureSettings::getShowAdobePageNumbers()):
  # change ReadingSettings::getShowAdobePageNumbers() to FeatureSettings::invertScreen()
  - ReplaceBLX: {Offset: 0x83EDE8, Find: 0x40EF40, Replace: 0x41A4A0}
  # in N3SettingsReadingController::showAdobePageNumbersToggled():
  # change ReadingSettings::getShowAdobePageNumbers() to FeatureSettings::invertScreen()
  - ReplaceBLX: {Offset: 0x83D426, Find: 0x40EF40, Replace: 0x41A4A0}
  # and ReadingSettings::setShowAdobePageNumbers(bool) to FeatureSettings::setInvertScreen(bool)
  - ReplaceBLX: {Offset: 0x83D432, Find: 0x4141E0, Replace: 0x419CF0}
  # then change the text in the settings page
  - FindReplaceString: {Find: "Show Adobe EPUB page numbers", Replace: "Invert screen"}

Always show confirmation dialog before upgrading:
  - Enabled: no
  - Description: |
      This patch makes the kobo always show a confirmation dialog before upgrading.
  # In UpgradeManager::requestUpgradeConfirmation(UpgradeType, QString const&):
  # replace the check for if UpgradeType is optional to be always true (CMP r4, r4)
  - ReplaceBytes: {Offset: 0xACE2B6, FindH: 01 2C, ReplaceH: A4 42}
  # and replace the call to UpgradeManager::isSilent to be always false (MOV r0, #0x0)
  - ReplaceBytes: {Offset: 0xACE2CA, FindBLX: 0x414AC0, ReplaceH: 4F F0 00 00}

Set reading footer height:
  - Enabled: no
  - Description: |
      This patch changes the reading footer menubar height (by default to 66%). This
      patch works well with the "Custom menubar - reduce height by 33%" patch.
  # In ReadingView::footerHeight() const:
  - ReplaceInt: {Offset: 0x9D8EA2, Find: 82,  Replace: 54}  # phoenix
  - ReplaceInt: {Offset: 0x9D8EB0, Find: 120, Replace: 80}  # dragon
  - ReplaceInt: {Offset: 0x9D8EC0, Find: 156, Replace: 103} # daylight
  - ReplaceInt: {Offset: 0x9D8EC2, Find: 70,  Replace: 47}  # others

Use old keyboard on all devices:
  - Enabled: no
  - Description: |
      Uses the old-style keyboard on all devices.
  # In Device::useNewKeyboard():
  # short-circuit the first device check (which controls a branch to the end of the function, which returns false)
  - ReplaceBytes: {Offset: 0x5E21C0, FindBLX: 0x419708, ReplaceH: 4F F0 01 00}